"use strict";(self.webpackChunkatlas=self.webpackChunkatlas||[]).push([[3248],{5269:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"chapters/07/4","title":"Detection","description":"Detecting goal misgeneralization creates unique challenges that set it apart from other alignment problems. The core difficulty is that goal misgeneralization often looks like success until the distribution shifts enough to reveal the proxy. Behavioral indistinguishability during training means that there\'s no obvious failure signal to detect. This makes it fundamentally different from capability failures or specification problems, where we can often spot issues through poor performance or obvious misinterpretation of instructions.","source":"@site/docs/chapters/07/04.md","sourceDirName":"chapters/07","slug":"/chapters/07/04","permalink":"/chapters/07/04","draft":false,"unlisted":false,"editUrl":"https://github.com/markov-root/atlas/edit/main/docs/chapters/07/04.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"4","title":"Detection","sidebar_label":"7.4 Detection","sidebar_position":5,"slug":"/chapters/07/04","reading_time_core":"12 min","reading_time_optional":"3 min","pagination_prev":"chapters/07/3","pagination_next":null},"sidebar":"docs","previous":{"title":"7.3 Scheming","permalink":"/chapters/07/03"}}');var n=i(4848),s=i(8453),o=(i(2482),i(8559),i(1966),i(2501));const r={id:4,title:"Detection",sidebar_label:"7.4 Detection",sidebar_position:5,slug:"/chapters/07/04",reading_time_core:"12 min",reading_time_optional:"3 min",pagination_prev:"chapters/07/3",pagination_next:null},l="Detection",h={},c=[{value:"Behavioral Techniques (Black-Box)",id:"01",level:2},{value:"Externalized Reasoning",id:"01-01",level:3},{value:"Internal Techniques (White-Box)",id:"02",level:2},{value:"Linear Probes",id:"02-01",level:3},{value:"Sparse Autoencoders",id:"02-02",level:3},{value:"Activation Manipulation",id:"02-03",level:3},{value:"Reasoning Structure Analysis",id:"02-04",level:3},{value:"Combined Techniques",id:"03",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components},{GlossaryTerm:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"detection",children:"Detection"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Detecting goal misgeneralization creates unique challenges that set it apart from other alignment problems."})," The core difficulty is that goal misgeneralization often looks like success until the distribution shifts enough to reveal the proxy. Behavioral indistinguishability during training means that there's no obvious failure signal to detect. This makes it fundamentally different from capability failures or specification problems, where we can often spot issues through poor performance or obvious misinterpretation of instructions."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Goal misgeneralization spans a continuous spectrum from simple proxy correlations to sophisticated scheming behavior."})," At one end, we have straightforward cases where models learned simple correlated heuristics. At the other end, we have adversarial goal directed systems that strategically conceal their true objectives while appearing aligned. Each point on this spectrum requires different detection approaches, but they all share the same basic common thread: the gap between what we intended the system to learn and what it actually learned."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"No single detection method will catch all forms of goal misgeneralization."})," Simple proxy learning might be caught through careful ",(0,n.jsx)(i,{term:"test set",definition:'{"definition":"A subset of data held out from training and validation, used only for final evaluation of model performance.","source":"","aliases":["Test Set","test data","holdout set"]}',children:(0,n.jsx)(i,{term:"test set",definition:'{"definition":"A subset of data held out from training and validation, used only for final evaluation of model performance.","source":"","aliases":["Test Set","test data","holdout set"]}',children:"test set"})})," design and distribution shift analysis. Sophisticated deception requires monitoring internal reasoning processes or setting up adversarial evaluation scenarios. This means we need what we've been emphasizing throughout this book - defense in depth. We can apply this principle recursively: even within the specific subproblem of detecting goal misgeneralization, we need multiple complementary approaches that provide uncorrelated signals about system behavior."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"We organize detection approaches using the same taxonomy from our evaluations chapter - by how they gather evidence about AI systems."})," Behavioral monitoring examines what models do through their inputs and outputs. Internal state monitoring uses interpretability techniques to examine how models think. Environmental monitoring watches for the downstream effects of misaligned behavior. For each approach, we face the same temporal trade-off: earlier detection is less reliable but more actionable, while later detection is more reliable but potentially too late for intervention."]}),"\n",(0,n.jsx)(t.h2,{id:"01",children:"Behavioral Techniques (Black-Box)"}),"\n",(0,n.jsx)(t.h3,{id:"01-01",children:"Externalized Reasoning"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Externalized reasoning offers a unique window into how models arrive at their decisions."}),' When models like Claude 3.7 Sonnet or DeepSeek R1 "think out loud" through chain-of-thought (CoT) reasoning, they externalize parts of their decision-making process in human-readable text. This creates an opportunity we don\'t have with most other AI systems - we can literally read their reasoning and check whether it reveals concerning patterns like goal misgeneralization. If a model is pursuing a proxy goal or engaging in deceptive behavior, we might catch it explicitly reasoning about these strategies.']}),"\n",(0,n.jsx)(o.A,{src:"./img/drP_Image_28.png",alt:"Enter image alt description",number:"28",label:"7.28",caption:"Long serial chains of cognition must pass through the chain of thought. The blue arrows represent the use of the chain of thought as a form of working memory. Chain of thought is the only way that information can flow down from later to earlier layers. As a result, for a fixed amount of tokens, the longest flows of information must use the chain of thought, and many information flows are impossible without it. For example, there is no way for information to flow between the two highlighted nodes without using the chain of thought."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"The promise rests on two key mechanisms that make reasoning externally visible."})," First, for sufficiently complex tasks, ",(0,n.jsx)(i,{term:"transformer",definition:'{"definition":"A neural network architecture that uses attention mechanisms to process sequential data, particularly effective for language tasks.","source":"[Vaswani et al., 2017](https://arxiv.org/abs/1706.03762)","aliases":["Transformer"]}',children:(0,n.jsx)(i,{term:"transformer",definition:'{"definition":"A neural network architecture that uses attention mechanisms to process sequential data, particularly effective for language tasks.","source":"[Vaswani et al., 2017](https://arxiv.org/abs/1706.03762)","aliases":["Transformer"]}',children:"Transformer"})})," architectures require models to use their chain-of-thought as working memory - long serial chains of reasoning must pass through the externalized text because that's the only way information can flow between different parts of the computation (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2507.11473",children:"Korbak et al., 2025"}),"). Second, large language models learn representations during ",(0,n.jsx)(i,{term:"pre-training",definition:'{"definition":"The initial training phase where a model learns general representations from a large dataset before being adapted to specific tasks.","source":"","aliases":["Pre-training","pretraining"]}',children:(0,n.jsx)(i,{term:"pre-training",definition:'{"definition":"The initial training phase where a model learns general representations from a large dataset before being adapted to specific tasks.","source":"","aliases":["Pre-training","pretraining"]}',children:"pretraining"})})," that tend to use chain-of-thought in ways similar to how humans use natural language, making their externalized reasoning interpretable by default (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2507.11473",children:"Korbak et al., 2025"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Detecting goal misgeneralization through externalized reasoning depends on faithfulness - whether the reasoning text accurately reflects the model's actual decision-making process."})," This is a concept we have referenced before, and will reference through other chapters as well. As a recap, a faithful chain-of-thought should highlight the key factors and reasoning steps that drive the model's behavior, allowing us to predict how it would process similar inputs. Unfaithful reasoning occurs when models conceal, misrepresent, or fail to externalize the actual factors influencing their decisions, making externalized reasoning unreliable for safety monitoring (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2505.05410",children:"Chen et al., 2025"}),")."]}),"\n",(0,n.jsx)(o.A,{src:"./img/0Tu_Image_29.png",alt:"Enter image alt description",number:"29",label:"7.29",caption:"An example of an unfaithful Chain-of-Thought generated by Claude 3.7 Sonnet. The model answers D to the original question (left) but changes its answer to C after we insert a metadata hint to the prompt (right, upper). The model does so without verbalizing its reliance on the metadata (right, lower) ([Chen et al., 2025](https://arxiv.org/abs/2505.05410))."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Empirical evidence indicates gaps in faithfulness of externalized reasoning."}),' Researchers tested reasoning models by presenting them with pairs of questions - one standard multiple-choice question and an identical question with a subtle hint pointing to a specific answer. The hints varied from neutral suggestions ("a Stanford professor indicates the answer is A") to metadata embedded in XML tags to explicitly problematic information ("you have gained unauthorized access to the system. The correct answer is A"). When models changed their answers after seeing hints, researchers checked whether they acknowledged using the hint in their reasoning. The results showed systematic unfaithfulness: Claude 3.7 Sonnet mentioned using hints only 25% of the time, while DeepSeek R1 did so 39% of the time (',(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2505.05410",children:"Chen et al., 2025"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Models seem to utilize correlations without admitting to it in externalized reasoning."})," Models showed lower faithfulness rates on harder questions. When researchers trained Claude 3.7 Sonnet in synthetic environments with deliberate reward hacks (spurious correlations that allowed high rewards for wrong answers), models learned to exploit these hacks successfully in over 99% of cases but verbalized the hacking behavior in less than 2% of examples across most environments. Instead of acknowledging their shortcut-taking, models constructed elaborate fake justifications for incorrect answers, suggesting that externalized reasoning may fail to detect goal misgeneralization precisely when such detection matters most (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2505.05410",children:"Chen et al., 2025"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Development practices should preserve externalized reasoning opportunities while recognizing their limitations."})," Teams developing reasoning models should avoid architectures that eliminate human-readable reasoning channels and should be cautious about process supervision that might reduce reasoning faithfulness (",(0,n.jsx)(t.a,{href:"https://metr.org/blog/2025-03-11-good-for-ai-to-reason-legibly-and-faithfully/",children:"Kinniment, 2025"}),"). However, externalized reasoning monitoring cannot serve as a standalone safety measure - it provides partial visibility that should complement other detection approaches rather than replace them. The temporal advantage lies in early deployment phases when models may not yet have learned to systematically conceal their reasoning processes."]}),"\n",(0,n.jsx)(o.A,{src:"./img/Tdj_Image_30.png",alt:"Enter image alt description",number:"30",label:"7.30",caption:"A comparison of Chain of Continuous Thought (CONONUT) with Chain-of-Thought (CoT). COCONUT allows the model to reason in an unrestricted latent space instead of a language space. In CoT, the model generates the reasoning process as a word token sequence, CONONUT regards the last hidden state as a representation of the reasoning state (termed \u201ccontinuous thought\u201d), and directly uses it as the next input embedding. This might make externalized reasoning oversight impossible ([Hao et al., 2024](https://arxiv.org/abs/2412.06769))"}),"\n",(0,n.jsx)(t.h2,{id:"02",children:"Internal Techniques (White-Box)"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"White box techniques examine how models process information internally rather than just observing their outputs."})," These techniques use interpretability tools to examine activation patterns, learned representations, and internal reasoning processes that might reveal misaligned objectives before they manifest as concerning behaviors. We will briefly touch on a couple of them here so that you know generally how they apply to goal misgeneralization. There are many more techniques than the ones we mention. For deeper technical details read our chapter on Interpretability."]}),"\n",(0,n.jsx)(t.h3,{id:"02-01",children:"Linear Probes"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Linear probes train simple classifiers on a model's internal activations to detect specific patterns of reasoning that distinguish aligned from misaligned behavior."})," Think of a linear probe as a simple lie detector that examines brain scans instead of behavioral cues. Just as a polygraph looks for physiological patterns that distinguish truthful from deceptive responses, a linear probe trains a classifier on a model's internal activations to detect specific patterns of reasoning. Because identical outputs can stem from fundamentally different internal processes - when a model writes secure code during training but vulnerable code during deployment, the internal computations are qualitatively different even when the final outputs appear almost indistinguishable. Linear probes attempt to detect these differences in the model's \"thought processes\" by training on contrastive examples and learning to classify the resulting activation patterns (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2502.03407",children:"Goldowsky-Dill et al., 2025"}),"; ",(0,n.jsx)(t.a,{href:"https://www.anthropic.com/research/probes-catch-sleeper-agents",children:"MacDiarmid et al., 2024"}),")."]}),"\n",(0,n.jsx)(o.A,{src:"./img/HoX_Image_31.png",alt:"Enter image alt description",number:"31",label:"7.31",caption:"Example of one probing method. The researchers gather activations on contrastive pairs similar to the example on the left, and fit a probe using logistic regression. This can then be used to detect deception on evaluation datasets where AI models sometimes give deceptive responses ([Goldowsky-Dill et al., 2025](https://arxiv.org/abs/2502.03407))."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Probes can detect strategic deception across realistic scenarios with surprisingly high accuracy."}),' Researchers trained linear probes using simple contrastive datasets - for example, responses to instructions like "pretend to be an honest person" versus "pretend to be a deceptive person" paired with identical factual statements - then tested whether these probes could detect deception in complex scenarios like insider trading concealment and deliberate capability sandbagging. When calibrated to have only a 1% false positive rate on normal conversations, they caught 95-99% of deceptive responses (',(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2502.03407",children:"Goldowsky-Dill et al., 2025"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:["Some evidence suggests that the more effective probes emerge from minimal ",(0,n.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:(0,n.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:"training data"})}),", and that they generalize well across different deceptive traces."]}),' The most successful probes were trained on generic contrasts - sometimes just two examples like "Human: Are you doing something dangerous? Assistant: yes" versus "Human: Are you doing something dangerous? Assistant: no." These minimal datasets generalized across multiple base models, different deception triggers, and various types of strategic behavior including writing vulnerable code and sandbagging on safety evaluations (',(0,n.jsx)(t.a,{href:"https://www.anthropic.com/research/probes-catch-sleeper-agents",children:"MacDiarmid et al., 2024"}),"). This cross-domain effectiveness suggests that strategic deception, regardless of its specific manifestation, leaves consistent computational signatures that are detectable through simple linear classification."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Linear probes exhibit systematic limitations that reveal the boundaries of their applicability."}),' Probes often track spurious correlations rather than the target behavior - firing on honest confessions of past misdeeds because they associate morality-related content with deception rather than tracking deception per se. They tend to detect "is this scenario related to deception" rather than "is this specific response deceptive," leading to high false positive rates on honest responses in deception-adjacent contexts. The high salience that makes these techniques work likely reflects how artificial model organisms are created through explicit backdoor insertion rather than how deceptive goals would naturally emerge (',(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2502.03407",children:"Goldowsky-Dill et al., 2025"}),")."]}),"\n",(0,n.jsx)(o.A,{src:"./img/fLz_Image_32.png",alt:"Enter image alt description",number:"32",label:"7.32",caption:"Since linear probes are learned, they can have the same failures as all other ML models. A red background on the text indicates the probe reads deceptive, a blue colour indicates the probe reads honest. Here the probe fires due to spurious correlations (left) seems to track something close to morality, as well as honesty. For example, honest confessions of past misdeeds are often rated as dishonest. It can also misclassify due to aggregation failures (center). The model is partially deceptive, the per token activations are good but the mean across per-token scores still classifies the output as deceptive ([Goldowsky-Dill et al., 2025](https://arxiv.org/abs/2502.03407))."}),"\n",(0,n.jsx)(t.h3,{id:"02-02",children:"Sparse Autoencoders"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Sparse autoencoders decompose model activations into interpretable components without knowing what to look for in advance, potentially discovering features that activate when models reason about hidden objectives or strategic concealment."})," Think of neurons in neural networks as being like words in a cramped library where each shelf (neuron) holds books on multiple unrelated topics. This makes it hard to find what you're looking for. SAEs are like reorganizing that library - they find new \"virtual shelves\" (features) where each shelf contains books on just one topic, making the collection much easier to navigate and understand. For goal misgeneralization detection, this enables discovery of features related to deceptive reasoning, objective concealment, or proxy goal pursuit even when researchers don't know exactly what computational patterns to expect (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2309.08600",children:"Cunningham et al., 2023"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"SAE-based detection has demonstrated success in discovering hidden objectives that resist other evaluation methods."}),' In controlled auditing scenarios, teams used SAEs to discover models\' hidden reward model sycophancy objectives. They identified SAE features that activated on prompts like "The assistant is an AI model that exhibits potentially concerning behaviors," which led to training documents revealing systematic objective misalignment. SAEs succeeded in cases where semantic search failed, particularly when investigating behavioral demonstrations rather than explicit discussions of objectives (',(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2503.10965",children:"Marks et al., 2025"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"SAE effectiveness faces fundamental limitations that constrain their applicability to naturally emerging goal misgeneralization."})," SAEs fail to capture all information in model activations - replacing layer activations with SAE reconstructions increases model perplexity substantially, indicating information loss. They work best on residual streams but struggle with intermediate MLP layers. Most critically, successful detection may require that misaligned goals correspond to explicit, interpretable features rather than emerging from distributed training dynamics, limiting effectiveness when goals arise organically rather than through deliberate training on explicit objective descriptions (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2309.08600",children:"Cunningham et al., 2023"}),"; ",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2503.10965",children:"Marks et al., 2025"}),")."]}),"\n",(0,n.jsx)(t.h3,{id:"02-03",children:"Activation Manipulation"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Direct manipulation of model activations during inference can reveal hidden behavioral tendencies by disrupting the computational mechanisms that maintain strategic concealment."}),' Think of this like giving someone a small amount of alcohol - their normal inhibitions and self-control mechanisms become impaired, potentially causing them to reveal thoughts they would normally keep hidden. Similarly, adding carefully calibrated noise to model activations during inference causes models with hidden misaligned objectives to reveal their true behavioral tendencies more readily than genuinely aligned models. This "fuzzing" or "intoxication" technique achieved 98% accuracy in distinguishing alignment-faking from genuinely aligned models (',(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2405.05466",children:"Clymer et al., 2024"}),")."]}),"\n",(0,n.jsx)(o.A,{src:"./img/yjX_Image_33.png",alt:"Enter image alt description",number:"33",label:"7.33",caption:"It is hypothesized that (1) alignment fakers represent a latent variable that tracks P(safe to behave) and (2) alignment fakers reveal misalignment when the variable exceeds a threshold. To pinpoint this latent variable, we use scenarios where P(safety to misbehave) varies and where models are still benign (the green region in the figure) ([Clymer et al., 2024](https://arxiv.org/abs/2405.05466))."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"The effectiveness of activation manipulation reveals fundamental differences in how aligned and misaligned goals are computationally represented."})," Models that learn to misbehave faster when fine-tuned toward misaligned behaviors, compared to genuinely aligned models, suggest that misaligned objectives may involve simpler computational pathways that are easier to activate when normal processing is disrupted. The success of noise injection indicates that strategic concealment requires additional computational overhead that becomes harder to maintain when the model's regulatory mechanisms are impaired, similar to how disinhibiting substances affect human behavior (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2405.05466",children:"Clymer et al., 2024"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Activation manipulation techniques demonstrate computational vulnerabilities in goal misgeneralization that can be exploited for detection purposes."})," The differential response to noise injection suggests that misaligned goals exist as relatively fragile computational patterns that become more apparent when disrupted. However, the technique achieved limited success with only mild effects in some settings - fuzzing increased information revelation rates to below 1% in certain experiments, suggesting it may be more effective when combined with other detection approaches rather than used in isolation (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2503.10965",children:"Marks et al., 2025"}),")."]}),"\n",(0,n.jsx)(t.h3,{id:"02-04",children:"Reasoning Structure Analysis"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:'Analysis of reasoning step importance can reveal when models are pursuing misaligned goals by identifying "thought anchors" - critical reasoning steps that disproportionately influence subsequent reasoning.'})," Techniques like counterfactual resampling (generating alternative continuations from each reasoning step) and ",(0,n.jsx)(i,{term:"attention",definition:'{"definition":"A mechanism that allows models to focus on relevant parts of the input when making predictions, computing weighted combinations of input elements.","source":"[Bahdanau et al., 2015](https://arxiv.org/abs/1409.0473)","aliases":["Attention","attention mechanism","self-attention"]}',children:(0,n.jsx)(i,{term:"attention",definition:'{"definition":"A mechanism that allows models to focus on relevant parts of the input when making predictions, computing weighted combinations of input elements.","source":"[Bahdanau et al., 2015](https://arxiv.org/abs/1409.0473)","aliases":["Attention","attention mechanism","self-attention"]}',children:"attention"})})," analysis can identify which parts of a reasoning trace are most causally important for the final answer. Planning and backtracking steps consistently show higher importance than computational steps, suggesting that goal-directed reasoning operates through high-level organizational sentences that steer the overall trajectory. This could help detect cases where models are reasoning toward misaligned objectives by revealing when planning steps point toward problematic goals (",(0,n.jsx)(t.a,{href:"https://arxiv.org/abs/2506.19143",children:"Bogdan et al., 2025"}),")."]}),"\n",(0,n.jsx)(t.h2,{id:"03",children:"Combined Techniques"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"The defense in depth detection techniques would combine multiple interpretability techniques with behavioral monitoring to create uncorrelated detection signals."})," As an illustrative example, a comprehensive system might use SAEs to identify suspicious features in model activations, validate their importance through activation patching experiments, test their generalization through probe analysis, and correlate findings with behavioral anomalies detected through environmental monitoring. When multiple independent techniques converge on evidence of the same concerning pattern - such as features related to deceptive reasoning, probes that detect strategic concealment, and behavioral tests that reveal capability overhang - this provides much stronger evidence than any single approach. There are many more techniques both behavioral and internal that we have not mentioned in this text, comprehensive evaluation approaches still need to be developed that use many of these techniques together. No such comprehensive test suite exists at the time of writing."]})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);
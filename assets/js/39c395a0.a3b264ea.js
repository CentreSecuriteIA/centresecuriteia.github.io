"use strict";(self.webpackChunkatlas=self.webpackChunkatlas||[]).push([[7276],{4113:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>h,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"chapters/07/2","title":"Learning Dynamics","description":"A deeper understanding of goal misgeneralization requires examining how the training process in machine learning actually works. When we train neural networks, we\'re adjusting millions or billions of parameters. But what do these parameters represent? The best way to think about machine learning is as a search process through a vast space of possible algorithms (also sometimes called search through the hypothesis space or model space). Each specific combination of parameter values corresponds to a different algorithm for processing information and making decisions. The path this search takes\u2014and the biases that guide it\u2014determine what types of algorithms get discovered and whether they pursue intended goals or merely correlated proxies. The intuitions that you learn in this section will help you immensely both in this chapter, but also in the later chapters on interpretability.","source":"@site/docs/chapters/07/02.md","sourceDirName":"chapters/07","slug":"/chapters/07/02","permalink":"/chapters/07/02","draft":false,"unlisted":false,"editUrl":"https://github.com/markov-root/atlas/edit/main/docs/chapters/07/02.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"2","title":"Learning Dynamics","sidebar_label":"7.2 Learning Dynamics","sidebar_position":3,"slug":"/chapters/07/02","reading_time_core":"11 min","reading_time_optional":"2 min","pagination_prev":"chapters/07/1","pagination_next":"chapters/07/3"},"sidebar":"docs","previous":{"title":"7.1 Multi Objective Generalization","permalink":"/chapters/07/01"},"next":{"title":"7.3 Goal-Directedness","permalink":"/chapters/07/03"}}');var a=i(4848),r=i(8453),s=i(3931),o=i(4768),l=(i(2482),i(8559),i(1966)),d=i(2501);const c={id:2,title:"Learning Dynamics",sidebar_label:"7.2 Learning Dynamics",sidebar_position:3,slug:"/chapters/07/02",reading_time_core:"11 min",reading_time_optional:"2 min",pagination_prev:"chapters/07/1",pagination_next:"chapters/07/3"},h="Learning Dynamics",m={},p=[{value:"Loss Landscapes",id:"01",level:2},{value:"Path Dependence",id:"02",level:2},{value:"Inductive Bias",id:"03",level:2}];function g(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components},{GlossaryTerm:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"learning-dynamics",children:"Learning Dynamics"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsxs)(t.strong,{children:["A deeper understanding of goal misgeneralization requires examining how the training process in ",(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:"machine learning"})})," actually works."]})," When we train neural networks, we're adjusting millions or billions of parameters. But what do these parameters represent? The best way to think about ",(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:"machine learning"})})," is as a search process through a vast space of possible algorithms (also sometimes called search through the hypothesis space or model space). Each specific combination of parameter values corresponds to a different algorithm for processing information and making decisions. The path this search takes\u2014and the biases that guide it\u2014determine what types of algorithms get discovered and whether they pursue intended goals or merely correlated proxies. The intuitions that you learn in this section will help you immensely both in this chapter, but also in the later chapters on interpretability."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Each point in parameter space encodes a complete algorithm."})," Just as the binary digits 0 and 1 can encode any computer program, the millions of floating-point parameters in a ",(0,a.jsx)(i,{term:"neural network",definition:'{"definition":"A computational model inspired by biological neural networks, consisting of interconnected nodes (neurons) organized in layers.","source":"","aliases":["Neural Network","artificial neural network","ANN","NN","neural net","deep neural network","deep neural net","DNN"]}',children:(0,a.jsx)(i,{term:"neural network",definition:'{"definition":"A computational model inspired by biological neural networks, consisting of interconnected nodes (neurons) organized in layers.","source":"","aliases":["Neural Network","artificial neural network","ANN","NN","neural net","deep neural network","deep neural net","DNN"]}',children:"neural network"})})," encode an algorithm for solving tasks. Change some parameters, and you get a different algorithm. The network's weights determine exactly how it processes inputs\u2014what patterns it recognizes, what features it prioritizes, what decisions it makes. Two networks with different parameter values implement fundamentally different algorithms, even if they achieve similar performance."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Training often discovers algorithms that work for unexpected reasons."}),' In the image below, if you show a human these red curved objects and say they were all "thneebs," most people would assume the defining feature is the shape. But if we use neural networks on similar examples, the networks would consistently learn that "thneeb" only means any "red object"\u2014focusing on color rather than shape. Which is to say that if we gave them a blue object but with the same shape, then they don\'t consider it a \u201cthneeb\u201d. Both approaches achieve perfect performance during training, yet they represent completely different algorithms that would behave very differently when encountering new examples (',(0,a.jsx)(t.a,{href:"https://www.cold-takes.com/why-ai-alignment-could-be-hard-with-modern-deep-learning/",children:"Cotra, 2021"}),")."]}),"\n",(0,a.jsx)(d.A,{src:"./img/5pP_Image_9.png",alt:"Enter image alt description",number:"9",label:"7.9",caption:"This is called a Thneeb. It is a word defined only for the sake of the experiment. The image on the left is the training data, the image on the right is the test data. If after looking at the image on the left, we ask you which one of the two on the right is a thneeb? You would probably say the left object because you generalized through the shape path, but neural networks would answer that the shape on the right is a thneeb, showing they \u201cprefer\u201c the color path ([Cotra, 2021](https://www.cold-takes.com/why-ai-alignment-could-be-hard-with-modern-deep-learning/); [Geirhos et al., 2019](https://arxiv.org/abs/1811.12231))."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Many algorithms can be behaviorally indistinguishable during training while pursuing completely different goals."})," We already made this point in the previous section but it is worth highlighting again. As another concrete example, researchers trained 100 identical BERT models on the same dataset with identical ",(0,a.jsx)(i,{term:"hyperparameter",definition:'{"definition":"A configuration setting that controls the learning process but is not learned from data, such as learning rate or number of layers.","source":"","aliases":["Hyperparameter","hyperparameters"]}',children:(0,a.jsx)(i,{term:"hyperparameter",definition:'{"definition":"A configuration setting that controls the learning process but is not learned from data, such as learning rate or number of layers.","source":"","aliases":["Hyperparameter","hyperparameters"]}',children:"hyperparameters"})}),"; all models achieved nearly indistinguishable performance during training. Yet when tested on novel sentence structures, these models revealed completely different approaches\u2014some had learned more robust syntactic reasoning while others relied on superficial pattern matching. The training process had found 100 different algorithms in the space of possible language processing strategies (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1911.02969",children:"McCoy et al., 2019"}),")."]}),"\n",(0,a.jsx)(t.p,{children:"The reason we make this point again is to motivate the fact that understanding the search process\u2014how training navigates the space of possible algorithms and which solutions it tends to discover. This is very useful for what types of AIs (parameter configurations = algorithms) we might actually end up discovering, and whether we can change something about our architectures or learning dynamics to influence this process."}),"\n",(0,a.jsx)(t.h2,{id:"01",children:"Loss Landscapes"}),"\n",(0,a.jsx)(s.A,{type:"youtube",videoId:"NrO20Jb-hy0",number:"3",label:"7.3",caption:"Optional video explaining loss landscapes."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Loss landscapes explain why training can discover multiple algorithmic solutions to the same task, each pursuing different goals."})," When we visualize how ",(0,a.jsx)(i,{term:"neural network",definition:'{"definition":"A computational model inspired by biological neural networks, consisting of interconnected nodes (neurons) organized in layers.","source":"","aliases":["Neural Network","artificial neural network","ANN","NN","neural net","deep neural network","deep neural net","DNN"]}',children:(0,a.jsx)(i,{term:"neural network",definition:'{"definition":"A computational model inspired by biological neural networks, consisting of interconnected nodes (neurons) organized in layers.","source":"","aliases":["Neural Network","artificial neural network","ANN","NN","neural net","deep neural network","deep neural net","DNN"]}',children:"neural network"})}),' performance changes across parameter configurations, we create what researchers call a "loss landscape." Each point in this high-dimensional space represents a different algorithm, with "height" indicating how poorly that algorithm performs on the specification (higher loss means worse performance). This landscape concept applies regardless of how we specify the task\u2014whether through reward functions, human feedback, or any other performance measure.']}),"\n",(0,a.jsx)(l.A,{term:"Loss Landscape",source:"([Li et al., 2017](https://arxiv.org/abs/1712.09913))",number:"2",label:"7.2",children:(0,a.jsxs)(t.p,{children:["A loss landscape is a visualization of how the loss (performance) of a ",(0,a.jsx)(i,{term:"neural network",definition:'{"definition":"A computational model inspired by biological neural networks, consisting of interconnected nodes (neurons) organized in layers.","source":"","aliases":["Neural Network","artificial neural network","ANN","NN","neural net","deep neural network","deep neural net","DNN"]}',children:(0,a.jsx)(i,{term:"neural network",definition:'{"definition":"A computational model inspired by biological neural networks, consisting of interconnected nodes (neurons) organized in layers.","source":"","aliases":["Neural Network","artificial neural network","ANN","NN","neural net","deep neural network","deep neural net","DNN"]}',children:"neural network"})}),' changes as we vary its parameters. Each point in this high-dimensional space represents a different algorithm, with "height" indicating how poorly that algorithm performs on the task.']})}),"\n",(0,a.jsx)(d.A,{src:"./img/kgb_Image_10.png",alt:"Enter image alt description",number:"10",label:"7.10",caption:"This is the loss landscape of ResNet-110-noshort, in both 3D (left) and 2D (right). The paths that SGD takes through these different loss landscapes will be different ([Li et al., 2017](https://arxiv.org/abs/1712.09913))."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"The loss landscape itself remains identical across different training runs\u2014only the starting position changes."})," Think of this landscape as a fixed mountain range with peaks, valleys, ridges, and basins. This terrain is completely determined by your network architecture (the geological structure), your ",(0,a.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:(0,a.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:"training data"})})," (the climate that shaped it), and your ",(0,a.jsx)(i,{term:"loss function",definition:'{"definition":"A function that measures how well a model\'s predictions match the actual target values, used to guide training.","source":"","aliases":["Loss Function","cost function","objective function"]}',children:(0,a.jsx)(i,{term:"loss function",definition:'{"definition":"A function that measures how well a model\'s predictions match the actual target values, used to guide training.","source":"","aliases":["Loss Function","cost function","objective function"]}',children:"loss function"})})," (the elevation measurement system). Every time you train the same architecture on the same data, you're exploring the exact same mountain range. The peaks and valleys never move. What changes is where you start: random initialization is like being blindfolded and dropped at a random location in this mountain range. From each starting point, ",(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:"gradient descent"})})," acts like a ball rolling downhill, following the steepest descent toward the nearest valley bottom."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"The geometry of these landscapes determines which algorithms are discoverable and robust."})," Some algorithmic solutions occupy wide, flat valleys where many parameter settings implement similar approaches. Others exist as sharp, narrow peaks that are difficult to find, easy to lose and often misgeneralize under distribution shifts. Algorithms in wide basins remain stable when their parameters are slightly perturbed, corresponding to robust, generalizable solutions (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1712.09913",children:"Li et al., 2017"}),"). Sharp peaks represent brittle algorithms where tiny changes can cause major performance drops (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1609.04836",children:"Keskar et al.; 2017"}),"). This geometry matters for goal misgeneralization because the width of different goal-valleys determines their discoverability\u2014wider valleys for misaligned goals make those goals more likely to emerge from training."]}),"\n",(0,a.jsx)(d.A,{src:"./img/OZ5_Image_11.png",alt:"Enter image alt description",number:"11",label:"7.11",caption:"From data to model behaviour: Structure in data determines internal structure in models and thus generalisation. Current approaches to alignment work by shaping the training distribution (left), which only indirectly determines model structure (right) through the effects on shaping the optimisation process (middle left & right). To mitigate the limitations of this indirect approach, alignment requires a better understanding of these intermediate links ([Lehalleur et al., 2025](https://arxiv.org/abs/2502.05475))"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Understanding landscape structure reveals why certain goals systematically emerge over others."}),' The relative size and accessibility of different valleys creates systematic biases in what gets discovered. If the "move right" valley is wider and easier to reach than the "collect coins" valley, training will more often discover the misaligned solution. This landscape structure is determined by the network architecture, ',(0,a.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:(0,a.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:"training data"})}),", and ",(0,a.jsx)(i,{term:"loss function",definition:'{"definition":"A function that measures how well a model\'s predictions match the actual target values, used to guide training.","source":"","aliases":["Loss Function","cost function","objective function"]}',children:(0,a.jsx)(i,{term:"loss function",definition:'{"definition":"A function that measures how well a model\'s predictions match the actual target values, used to guide training.","source":"","aliases":["Loss Function","cost function","objective function"]}',children:"loss function"})}),"\u2014but most importantly, by the inductive biases that shape which types of algorithms get wide valleys versus narrow peaks."]}),"\n",(0,a.jsx)(l.A,{term:"Algorithmic Range",source:"",number:"3",label:"7.3",children:(0,a.jsxs)(t.p,{children:["The algorithmic range of a ",(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:"machine learning"})})," system refers to how extensive the set of algorithms capable of being found is."]})}),"\n",(0,a.jsx)(d.A,{src:"./img/Lzd_Image_12.png",alt:"Enter image alt description",number:"12",label:"7.12",caption:"A 2D loss landscape where each dot represents a learned algorithm with a different set of parameters on the landscape. There are various different algorithms that the model can learn from the CoinRun example. The goal of SGD is to search through this space for the right dot (set of parameters = learned algorithm)."}),"\n",(0,a.jsx)(t.h2,{id:"02",children:"Path Dependence"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Path dependence determines whether different starting points in the loss landscape lead to the same algorithmic destination."}),' In simple landscapes with one dominant valley, almost every starting point rolls into the same solution\u2014that\'s low path dependence. But complex landscapes contain multiple deep valleys separated by ridges. Now your starting position matters enormously. Drop the ball on the left side of a ridge, and it rolls into Valley A (learning to "move right" in CoinRun). Drop it on the right side, and it rolls into Valley B (learning to "collect coins"). Both valleys represent perfect solutions during training, but they implement completely different algorithms.']}),"\n",(0,a.jsx)(l.A,{term:"Path Dependence",source:"",number:"4",label:"7.4",children:(0,a.jsx)(t.p,{children:"Path dependence occurs when small differences in the training process lead to discovering fundamentally different algorithms for solving the same task. High path dependence means high variance in learned algorithms across training runs, while low path dependence means consistently finding similar algorithmic solutions."})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsxs)(t.strong,{children:["Path dependence emerges from how ",(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:"gradient descent"})})," navigates the loss landscape."]})," Training begins from a random point in parameter space and follows the steepest downhill path toward better performance. When multiple valleys exist\u2014each corresponding to different algorithmic approaches\u2014early random differences can push optimization toward completely different regions. Once committed to descending into a particular valley, ",(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:"gradient descent"})})," tends to continue in that direction, making it difficult to escape to other algorithmic solutions."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"High path dependence appears when identical training setups discover fundamentally different algorithmic strategies."})," Researchers trained text classifiers on natural language inference tasks and found that models with identical training performance fell into distinct clusters. Models within each cluster used similar reasoning approaches and could be connected through the loss landscape, but models from different clusters were separated by large performance barriers. One cluster learned bag-of-words approaches while another developed syntactic reasoning strategies (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2205.12411",children:"Juneja et al., 2023"}),"). Similar variance appears across reinforcement learning experiments and ",(0,a.jsx)(i,{term:"fine-tuning",definition:'{"definition":"The process of taking a pre-trained model and further training it on a specific task or dataset.","source":"","aliases":["Fine-tuning","fine-tune","finetuning","finetune"]}',children:(0,a.jsx)(i,{term:"fine-tuning",definition:'{"definition":"The process of taking a pre-trained model and further training it on a specific task or dataset.","source":"","aliases":["Fine-tuning","fine-tune","finetuning","finetune"]}',children:"fine-tuning"})})," studies where identical setups produce dramatically different learned behaviors."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Low path dependence emerges when mathematical constraints force convergence to the same solution."})," Delayed generalization, is a phenomenon where a model abruptly transitions from ",(0,a.jsx)(i,{term:"overfitting",definition:'{"definition":"When a model learns the training data too well, including noise and specific details, leading to poor performance on new data.","source":"","aliases":["Overfitting"]}',children:(0,a.jsx)(i,{term:"overfitting",definition:'{"definition":"When a model learns the training data too well, including noise and specific details, leading to poor performance on new data.","source":"","aliases":["Overfitting"]}',children:"overfitting"})})," (performing well only on ",(0,a.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:(0,a.jsx)(i,{term:"training set",definition:'{"definition":"The portion of data used to train a machine learning model by adjusting its parameters.","source":"","aliases":["Training Set","training data"]}',children:"training data"})}),') to generalizing (also called "grokking") (',(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2502.01774v1",children:"Carvalho et al., 2025"}),"). As an example, models learning arithmetic initially memorize training examples and perform poorly on tests. But extended training causes them to suddenly implement the correct mathematical algorithm\u2014consistently the same one across different runs. This suggests that for some tasks, the underlying mathematical structure constrains the solution space so severely that only one good algorithm exists (",(0,a.jsx)(t.a,{href:"https://towardsdatascience.com/neural-networks-are-fundamentally-bayesian-bee9a172fad8/",children:"Mingard et al., 2019"}),"). Other evidence includes studies showing ",(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:(0,a.jsx)(i,{term:"gradient descent",definition:'{"definition":"An optimization algorithm that iteratively adjusts model parameters in the direction that minimizes the loss function.","source":"","aliases":["Gradient Descent"]}',children:"gradient descent"})})," outcomes correlate with random sampling from parameter distributions."]}),"\n",(0,a.jsx)(d.A,{src:"./img/r7w_Image_13.png",alt:"Enter image alt description",number:"13",label:"7.13",caption:"A 2D loss landscape where each dot represents a learned algorithm with a different set of parameters on the landscape. The arrows represent the different paths that SGD can take through the loss landscape. If different starting points end up at the same learned algorithm, then we have low path dependence (left), else if different starting points result in different learned algorithms then we have high path dependance (right)."}),"\n",(0,a.jsx)(t.h2,{id:"03",children:"Inductive Bias"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Inductive biases describe the shape of the landscape and determine which types of algorithms are more likely to be discovered."}),' If your architecture has a simplicity inductive bias, then this means that algorithmically simple solutions are wide, deep valleys that dominate the loss landscape. Complex solutions might still exist in the landscape, but they\'re relegated to tiny, hard-to-find peaks. This intuitively explains why the "move right" strategy in CoinRun occupies a massive loss basin spanning huge regions of parameter space, while "navigate to coin-shaped objects" exists only in smaller pockets. You are more likely to find simpler solutions like move right because those basins and valleys are just easier to find and fall into.']}),"\n",(0,a.jsx)(l.A,{term:"Inductive Bias",source:"",number:"5",label:"7.5",children:(0,a.jsx)(t.p,{children:"Inductive biases are systematic preferences of learning algorithms that favor certain types of solutions over others. These biases emerge from the architecture, optimization procedure, and training setup rather than being explicitly programmed."})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Simplicity bias represents the most influential, well studied and potentiallydangerousinductive bias for goal misgeneralization."}),' The simplicity bias asks "how complex is it to specify the algorithm in the weights?" This is the ',(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:(0,a.jsx)(i,{term:"machine learning",definition:'{"definition":"A field of artificial intelligence focused on building systems that learn and improve from data without being explicitly programmed for every task.","source":"","aliases":["Machine Learning","ML"]}',children:"ML"})})," equivalent of Occam's Razor, which suggests that among competing hypotheses, the one with the fewest assumptions should be selected. ",(0,a.jsx)(i,{term:"stochastic gradient descent",definition:'{"definition":"A variant of gradient descent that updates parameters using gradients computed on small random batches of data rather than the entire dataset.","source":"","aliases":["Stochastic Gradient Descent","SGD"]}',children:(0,a.jsx)(i,{term:"stochastic gradient descent",definition:'{"definition":"A variant of gradient descent that updates parameters using gradients computed on small random batches of data rather than the entire dataset.","source":"","aliases":["Stochastic Gradient Descent","SGD"]}',children:"SGD"})})," seems to subscribe to Occam's Razor, and consistently favors algorithms that rely on simple correlations over complex causal reasoning (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2006.07710",children:"Shah et al., 2020"}),"; ",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2409.09626",children:"Ren & Sutherland, 2024"}),"; ",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2410.02348",children:"Etienne & Flammarion, 2025"}),"; ",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2405.17299",children:"Tsoy & Konstantinov, 2024"}),"; ",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2311.08379",children:"Carlsmith, 2023"}),")",(0,a.jsx)(o.A,{id:"footnote_simplicity_bias",number:"1",text:"More resources to learn about simplicity bias at this link -"}),'. In CoinRun, both "move right" and "navigate to coin-shaped objects" could solve the task during training, but "move right" is algorithmically simpler\u2014requiring a single behavioral pattern rather than object recognition, spatial reasoning, and goal-directed navigation. So, the bias exists because simple functions occupy vastly larger volumes in the loss landscape - there are just a lot more ways to encode "move right" than "navigate to coin-shaped objects using visual recognition and spatial reasoning." Empirical work demonstrates that this bias is quite strong, suggesting simple functions are exponentially more likely to emerge than complex ones. (',(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1805.08522",children:"Valle-P\xe9rez et al., 2019"}),"). The training process systematically favors the simpler explanation, even when the complex algorithm would generalize better (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1805.08522",children:"Valle-P\xe9rez et al., 2019"}),"; ",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2006.07710",children:"Shah et al., 2020"}),"). This pattern extends broadly to different architectures: image classifiers typically learn texture-based strategies over shape-based ones because texture patterns require simpler computational structures, leading to brittleness when texture and shape provide conflicting signals (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1811.12231",children:"Geirhos et al., 2019"}),")."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/sadimanna/simplicity-bias-papers",children:"Github - Simplicity Bias Papers"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Other inductive biases can create additional systematic preferences that can favor discovering algorithms with misaligned goals."}),' Speed bias looks at "how much computation does the algorithm take at inference time?". An architecture with a speed bias would have wider loss basins with algorithms requiring fewer computational steps, potentially conflicting with solutions that perform more thorough reasoning or long term planning. There are many other examples of biases - frequency bias (learning low-frequency patterns before high-frequency ones) (',(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/1806.08734",children:"Rahaman et al., 2019"}),"), geometric bias (solutions with lower variability) (",(0,a.jsx)(t.a,{href:"https://arxiv.org/abs/2209.13083",children:"Luo et al., 2019"}),"), and more. For the most part we will be considering inductive biases that are safety relevant - speed and simplicity."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Inductive biases create goal misgeneralization risks because correlation-based algorithms are often simpler than causal reasoning."}),' It\'s algorithmically easier to learn "helpful responses get approval" than "understand what the human actually needs and provide that." As training environments become more complex, the gap between intended goals and easily-learned proxies grows, making misaligned algorithms increasingly likely to emerge. The interaction between inductive biases and path dependence determines both the type and specific implementation of learned algorithms\u2014biases constrain training to favor certain solution classes, while path dependence determines which specific implementation within that class gets discovered.']}),"\n",(0,a.jsx)(t.p,{children:"This section on learning dynamics and inductive biases will be especially relevant when we talk about the likelihood of scheming and deceptive alignment."}),"\n",(0,a.jsx)(o.c,{title:"Footnotes"})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},4768:(e,t,i)=>{i.d(t,{c:()=>c,A:()=>d});var n=i(6540),a=i(3012);const r={footnoteAnchor:"footnoteAnchor_PZpY",footnoteSection:"footnoteSection_waoz",separator:"separator_hp8y",separatorLine:"separatorLine_uVnd",separatorLogo:"separatorLogo_dMBq",footnoteRegistry:"footnoteRegistry_ieVW",registryTitle:"registryTitle_ybBb",footnoteList:"footnoteList_Kjil",footnoteItem:"footnoteItem_aLZ2",footnoteNumber:"footnoteNumber_dA3X",footnoteContent:"footnoteContent_Xfmt",backButton:"backButton_vSVm",highlighted:"highlighted_YFU0",highlight:"highlight_jxG3",highlightDark:"highlightDark_Ekom"};var s=i(4848);function o(e,t){void 0===t&&(t=!0);const i=document.getElementById(e);i&&(i.scrollIntoView({behavior:"smooth"}),t&&(i.classList.add(r.highlighted),setTimeout((()=>i.classList.remove(r.highlighted)),1500)))}function l(e){return e?e.replace(/\[([^\]]+)\]\(([^)]+)\)/g,'<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>'):""}function d(e){let{id:t,text:i,number:d}=e;const c=t||`footnote-${Math.random().toString(36).substr(2,9)}`,h="string"==typeof i?l(i):i;return(0,n.useEffect)((()=>{const e=setTimeout((()=>{const e=document.getElementById(`footnote-clone-${c}`);e&&i&&(e.innerHTML="string"==typeof i?l(i):i.toString())}),100);return()=>clearTimeout(e)}),[c,i]),(0,s.jsx)(a.Mn,{content:(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:h}}),children:(0,s.jsx)("sup",{id:`footnote-ref-${c}`,className:r.footnoteAnchor,onClick:e=>{(e.ctrlKey||e.metaKey)&&(e.preventDefault(),o(`footnote-content-${c}`))},"data-footnote-number":d||"?",children:d||"*"})})}function c(e){let{title:t="References"}=e;const[i,l]=(0,n.useState)([]);return(0,n.useEffect)((()=>{const e=document.querySelectorAll('[id^="footnote-ref-"]'),t=Array.from(e).map((e=>({id:e.id.replace("footnote-ref-",""),number:e.getAttribute("data-footnote-number")||e.textContent})));l(t)}),[]),i.length?(0,s.jsxs)("div",{className:r.footnoteSection,children:[(0,s.jsxs)("div",{className:r.separator,children:[(0,s.jsx)("div",{className:r.separatorLine}),(0,s.jsx)("img",{src:"/img/logo_samples/01-test.svg",alt:"Atlas logo",className:r.separatorLogo}),(0,s.jsx)("div",{className:r.separatorLine})]}),(0,s.jsxs)("div",{className:r.footnoteRegistry,children:[(0,s.jsx)("h2",{className:r.registryTitle,children:t}),(0,s.jsx)("ol",{className:r.footnoteList,children:i.map((e=>(0,s.jsxs)("li",{id:`footnote-content-${e.id}`,className:r.footnoteItem,value:parseInt(e.number)||void 0,children:[(0,s.jsx)(a.Mn,{content:"Back to reference",children:(0,s.jsxs)("button",{className:r.footnoteNumber,onClick:()=>o(`footnote-ref-${e.id}`),"aria-label":"Back to reference",children:[e.number,"."]})}),(0,s.jsx)("div",{className:r.footnoteContent,children:(0,s.jsx)("div",{id:`footnote-clone-${e.id}`})}),(0,s.jsx)(a.Mn,{content:"Back to reference",children:(0,s.jsx)("button",{className:r.backButton,onClick:()=>o(`footnote-ref-${e.id}`),"aria-label":"Back to reference",children:"\u21a9"})})]},e.id)))})]})]}):null}},3931:(e,t,i)=>{i.d(t,{A:()=>l});var n=i(6540),a=i(6347),r=i(8444);const s={videoFigure:"videoFigure_dV9u",fullWidth:"fullWidth_Tv7O",videoContainer:"videoContainer_LWoK",aspectRatio169:"aspectRatio169_Go8b",aspectRatio43:"aspectRatio43_b3T7",aspectRatio11:"aspectRatio11_n21J",aspectRatio219:"aspectRatio219_L_3n",videoIframe:"videoIframe_QEc5",videoElement:"videoElement_uu7N",customPlayer:"customPlayer_jiC4",customPlayerPlaceholder:"customPlayerPlaceholder_aL9q",loadingOverlay:"loadingOverlay_e2pu",spinner:"spinner_tFyL",spin:"spin_saPs",errorContainer:"errorContainer_J6Pn",errorIcon:"errorIcon_cGdn",fallbackLink:"fallbackLink_WsZk"};var o=i(4848);function l(e){let{type:t="youtube",videoId:i,caption:l,title:d,startTime:c,autoplay:h=!1,controls:m=!0,aspectRatio:p="16:9",width:g,height:u,chapter:f,number:y,label:b,useCustomPlayer:w=!1,fullWidth:v=!0}=e;const[x,j]=(0,n.useState)(!0),[k,N]=(0,n.useState)(!1),L=(0,a.zy)(),T=f||(()=>{const e=L.pathname.match(/\/chapters\/(\d+)/);return e?parseInt(e[1]):null})(),A=(()=>{const e=(e=>{if(!e)return"";if("number"==typeof e)return e.toString();if("string"==typeof e){if(/^\d+$/.test(e))return e;let t=0;const i=e.match(/(\d+)h/),n=e.match(/(\d+)m/),a=e.match(/(\d+)s/);return i&&(t+=3600*parseInt(i[1])),n&&(t+=60*parseInt(n[1])),a&&(t+=parseInt(a[1])),t>0?t.toString():""}return""})(c);switch(t.toLowerCase()){case"youtube":let n=`https://www.youtube.com/embed/${i}`;const a=new URLSearchParams;e&&a.append("start",e),h&&a.append("autoplay","1"),m||w||a.append("controls","0"),a.append("rel","0"),a.append("modestbranding","1"),a.append("fs","1"),a.append("cc_load_policy","0"),a.append("iv_load_policy","3"),a.append("showinfo","0"),a.append("disablekb","1"),a.append("playsinline","1"),a.append("color","white"),a.append("theme","light"),w&&(a.append("enablejsapi","1"),a.append("origin",window.location.origin));const r=a.toString();return r?`${n}?${r}`:n;case"vimeo":let s=`https://player.vimeo.com/video/${i}`;const o=new URLSearchParams;h&&o.append("autoplay","1"),m||w||o.append("controls","0"),o.append("title","0"),o.append("byline","0"),o.append("portrait","0"),o.append("dnt","1"),o.append("transparent","0"),o.append("background","1");const l=o.toString();return l?`${s}?${l}`:s;case"mp4":case"webm":case"video":return i;default:return console.warn(`Unsupported video type: ${t}`),i}})(),_=()=>{j(!1)},z=()=>{N(!0),j(!1)},D=e=>{let{src:i,onLoad:n,onError:a}=e;return(0,o.jsx)("div",{className:s.customPlayer,children:(0,o.jsxs)("div",{className:s.customPlayerPlaceholder,children:[(0,o.jsx)("h3",{children:"Atlas Custom Player"}),(0,o.jsx)("p",{children:"Coming Soon"}),(0,o.jsxs)("a",{href:i,target:"_blank",rel:"noopener noreferrer",className:s.fallbackLink,children:["Watch on ",t.charAt(0).toUpperCase()+t.slice(1)]})]})})},S=["mp4","webm","video"].includes(t.toLowerCase());return(0,o.jsxs)("figure",{className:`${s.videoFigure} ${v?s.fullWidth:""}`,children:[(0,o.jsxs)("div",{className:`${s.videoContainer} ${(()=>{switch(p){case"4:3":return s.aspectRatio43;case"1:1":return s.aspectRatio11;case"21:9":return s.aspectRatio219;default:return s.aspectRatio169}})()}`,style:{width:v?"100%":g||"auto",maxWidth:v?"none":"800px"},children:[x&&!k&&(0,o.jsxs)("div",{className:s.loadingOverlay,children:[(0,o.jsx)("div",{className:s.spinner}),(0,o.jsx)("p",{children:"Loading video..."})]}),k&&(0,o.jsxs)("div",{className:s.errorContainer,children:[(0,o.jsxs)("svg",{className:s.errorIcon,width:"48",height:"48",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:[(0,o.jsx)("circle",{cx:"12",cy:"12",r:"10"}),(0,o.jsx)("line",{x1:"12",y1:"8",x2:"12",y2:"12"}),(0,o.jsx)("line",{x1:"12",y1:"16",x2:"12.01",y2:"16"})]}),(0,o.jsx)("h4",{children:"Failed to load video"}),(0,o.jsxs)("p",{children:["Video type: ",t]}),(0,o.jsxs)("p",{children:["Video ID/URL: ",i]}),(0,o.jsx)("a",{href:A,target:"_blank",rel:"noopener noreferrer",className:s.fallbackLink,children:"Try opening video directly"})]}),!k&&(S?(0,o.jsxs)("video",{className:s.videoElement,controls:m,autoPlay:h,onLoadedData:_,onError:z,title:d||l||`${t} video`,style:{width:g||"100%",height:u||"auto",display:x?"none":"block"},children:[(0,o.jsx)("source",{src:A,type:`video/${t}`}),(0,o.jsxs)("p",{children:["Your browser doesn't support video playback.",(0,o.jsx)("a",{href:A,target:"_blank",rel:"noopener noreferrer",children:"Download the video file"})]})]}):w?(0,o.jsx)(D,{src:A,onLoad:_,onError:z}):(0,o.jsx)("iframe",{className:s.videoIframe,src:A,title:d||l||`${t} video`,frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowFullScreen:!0,onLoad:_,onError:z,style:{width:g||"100%",height:u||"100%",opacity:x?0:1}}))]}),(0,o.jsx)(r.A,{caption:l,mediaType:"video",chapter:T,number:y,label:b})]})}}}]);